Question 1:
Write a program which does the following things:1. Takes a positive number from the user.
2. Makes an array of numbers till the number given by user
3. Use higher order function to filter the odd numbers
4. Generate and array of the cubes of the filtered numbers


var inputArray = [ ];
var size = 5; 
//Maximum Array size

for(var i=0; i<size; i++)
 {
	
	//Taking Input from user
	inputArray[i] = prompt('Enter Element ' + (i+1));
}

//Print the array in the console.
console.log(inputArray);

const countBy = (arr, fn) => arr.reduce((acc, num) => {
  const prop = fn(num);
  acc[prop] = (acc[prop] || 0) + 1;
  return acc;
}, {});

function evenOdd(n) {
  if (n % 2 =! 0) return "odd";
  else return "even";
}
var nums = [1, 2, 3, 4, 5];
console.log(countBy(nums, evenOdd))


<script> 

    // JavaScript to illustrate filter() method 

    function isEven(value) { 

        return value % 2 == 0; 

    } 

  

    function func() { 

        var filtered = [odd].filter(isEven); 

        document.write(filtered); 

    } 

    func(); 
</script>




Question 2:
Create a Class User with properties as name, age & email.
He can login and logoutCreate another class Moderator which has all the features of User, plus additional functionality
to Addcoins and remove coins.Create one more class Admin which has all the features of Moderator plus additional features
like add aCourse and delete a particular course for a user.


// User class 
let user = {
  name: "John",
  age: 30;
  email:"j@gmail.com";
};
    
    
    
    





Question 3:
Using promises/async await/fetch get the random todos from the json placeholder api. And log all thecompleted
todos to the console.API Endpoint : â€‹https://jsonplaceholder.typicode.com/todos



const promises = Promise.all([

 fetch('https://jsonplaceholder.typicode.com/todos'),

 fetch('https://jsonplaceholder.typicode.com/todos'),

]);

promises

 .then(result => {

   console.log('TCL: result', result);

 })

 .catch(err => {

   console.warn('Something went wrong: ', err);

 });


 [

   {

    body: (...)

    bodyUsed: false

    headers: Headers {}

    ok: true

    redirected: false

    status: 200

    statusText: ""

    type: "cors"

    url: "https://jsonplaceholder.typicode.com/todos"

   },

   {

    body: (...)

    bodyUsed: false

    headers: Headers

    \_\_proto\_\_: Headers

    ok: true

    redirected: false

    status: 200

    statusText: ""

    type: "cors"

    url: "https://jsonplaceholder.typicode.com/todos"

   }

 ]

